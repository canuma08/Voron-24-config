#####################################################################
# 	Bed Heater Thermistor
#####################################################################
##[heater_bed]
##heater_pin: PA1
##sensor_type: NTC 100K MGB18-104F39050L32
##sensor_pin: PF3
##max_power: 0.6
##min_temp: -273.15
##max_temp: 120
##control: pid
##pid_kp: 58.437
##pid_ki: 2.347
##pid_kd: 363.769

#####################################################################
# 	Bedfans
#####################################################################
##[fan_generic BedFans]
####	Bed Fan - FAN3
##pin: PD13
##cycle_time: 0.1
##kick_start_time: 0.5
##shutdown_speed: 0

#####################################################################
# 	Chamber Thermistor
#####################################################################
##[thermistor chamber_temp]
##temperature1: 25
##resistance1: 10000
##beta: 3950

##[temperature_sensor chamber]
##sensor_type: chamber_temp
##sensor_pin: PF4
##min_temp: -273.15
##max_temp: 75
##gcode_id: C



############### Config options ##################
[gcode_macro _BEDFANVARS]
variable_threshold: 30		# If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
variable_bed_target: 0
variable_bed: 0
variable_chamber_target: 0
variable_chamber: 0

gcode:
	{% set bed_target = params.S|default(0)|int %}
    {% set chamber_target = params.C|default(0)|int %}
	{% set status = params.STATUS|string %}
	SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bed_target VALUE={bed_target}
	SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=chamber_target VALUE={chamber_target}
	M118 BEDFANVARS bed_target={bed_target}
	M118 BEDFANVARS chamber_target={chamber_target}


[gcode_macro M140]																# Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
rename_existing: M99140
variable_c: 0

gcode:
    # Parameters
    {% set s = params.S|default(0)|int %}
    {% set c = params.C|default(0)|int %}
	{% set status = params.STATUS|default(0)|string %}
	_BEDFANVARS S={s} C={c} STATUS={status}

	M118 M140 called with S={s}, C={c}, STATUS={status}
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={s} C={c} STATUS={status}
	

[gcode_macro SET_HEATER_TEMPERATURE]										# Override, set fan speeds to low and start monitoring loop.
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
	# Parameters
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	{% set c = params.C|default(0)|int %}
	{% set status = params.STATUS|default(0)|string %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}

	M118 SET_HEATER_TEMPERATURE called with Heater={HEATER}, TARGET={TARGET} C={c}, STATUS={status}	
	M118 BEDFANS,SET_HEATER_TEMPERATURE bed_target= {TARGET}
	M118 BEDFANS,SET_HEATER_TEMPERATURE chamber_target= {printer["gcode_macro _BEDFANVARS"].chamber_target|int}
	{% if HEATER|lower == "extruder" %}
		M118 BEDFANS,SET_EXTRUDER_TEMPERATURE call M104 S{TARGET}
		M104 S{TARGET}
	{% elif HEATER|lower == "heater_bed" %}
		M118 BEDFANS,SET_BED_TEMPERATURE call M99140 S{TARGET}
		M99140 S{TARGET}
	{% else %}
		{action_respond_info("Heater %s not supported" % HEATER)}
	{% endif %}

	# Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
	{% if HEATER|lower == "heater_bed" %}
		{% if TARGET >= THRESHOLD %}
			#M118 before Loop, BedTemp: {printer.heater_bed.temperature}
			#M118 before Loop, TargetBedTemp: {TARGET}
			#M118 before Loop, Threshold: {THRESHOLD}
			#M118 before Loop, ChamberTarget: {printer["gcode_macro _BEDFANVARS"].chamber_target|int}
			M117 Starting Bed Fans on low
			BEDFANS_WARMUP
			UPDATE_DELAYED_GCODE ID=bedfan_start_loop DURATION=5
		{% else %}
			M118 Fans OFF, 
			BEDFANSOFF
			UPDATE_DELAYED_GCODE ID=bedfan_start_loop DURATION=0 #	Cancel bed fan loop if it's running
		{% endif %}
	{% endif %}
	

################ Monitoring loop #####################

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode bedfan_start_loop]
gcode:
	# Vars
    {% set chamber_target = printer["gcode_macro _BEDFANVARS"].chamber_target|int %}
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	{% set chamber = printer['temperature_sensor chamber'].temperature %}

	#M118 Loop, BedTemp: {printer.heater_bed.temperature}
	#M118 Loop, TargetTemp: {printer.heater_bed.target}
	#M118 Loop, Threshold: {THRESHOLD}
	M118 time: {printer.toolhead.estimated_print_time} 
	{% if printer.heater_bed.target >= THRESHOLD %}								# Continue only if target temp greater than threshold.
		#M118 Bed Heating
		{% if printer.heater_bed.temperature|float < (printer.heater_bed.target - 5|int) %}
			M118 Waiting for Bed Temp
			UPDATE_DELAYED_GCODE ID=bedfan_start_loop DURATION=5				# If temp not reached yet: loop again								
		{% else %}
			M118 Fast Chamber Heating
			BEDFANS_HEATFAST
			UPDATE_DELAYED_GCODE ID=bedfan_start_loop DURATION=0
			UPDATE_DELAYED_GCODE ID=initial_chamber_temp_heating DURATION=15
		{% endif %}
	{% endif %}


[delayed_gcode initial_chamber_temp_heating]

gcode:
	# Vars
	{% set chamber_target = printer["gcode_macro _BEDFANVARS"].chamber_target|int %}
	{% set chamber = printer['temperature_sensor chamber'].temperature|float %}

	#M118 ChamberTemp Control
	#M118 Loop, chamber: {chamber}
	#M118 Loop, chamber_target chamber_target: {chamber_target}

	{% if chamber_target > 0 %}
		{% if printer["temperature_sensor chamber"].temperature|float <= chamber_target %}
			M118 Initial Fast Chamber Heat, Act:{printer["temperature_sensor chamber"].temperature|float}, Target:{chamber_target}
			BEDFANS_HEATFAST
			UPDATE_DELAYED_GCODE ID=initial_chamber_temp_heating DURATION=5
		{% else %}
			UPDATE_DELAYED_GCODE ID=initial_chamber_temp_heating DURATION=0
			UPDATE_DELAYED_GCODE ID=chamber_temp_control_loop DURATION=30
			M99140 S{printer.heater_bed.target - 5}
		{% endif %}	
	{% endif %}


[delayed_gcode chamber_temp_control_loop]

gcode:
	# Vars
	{% set chamber_target = printer["gcode_macro _BEDFANVARS"].chamber_target|int %}
	{% set chamber = printer['temperature_sensor chamber'].temperature|float %}

	#M118 ChamberTemp Control
	#M118 Loop, chamber: {chamber}
	#M118 Loop, chamber_target chamber_target: {chamber_target}	
	
	{% if chamber_target > 0 %}
		M118 Maintain Chamber temp
		{% if printer["temperature_sensor chamber"].temperature|float > chamber_target + 0.1 %}
			M118 cooling
			BEDFANS_COOLSLOW
		{% elif printer["temperature_sensor chamber"].temperature|float < chamber_target - 0.1 %}%}
			M118 heating
			BEDFANS_HEATSLOW
		{% endif %}	
		UPDATE_DELAYED_GCODE ID=chamber_temp_control_loop DURATION=5
	{% elif printer["temperature_sensor chamber"].temperature|float < 50 %}
			M118 FANS OFF
			BEDFANS_HEATFAST
			UPDATE_DELAYED_GCODE ID=chamber_temp_control_loop DURATION=0
	{% else %}
			M118 Cooldown to 50
			UPDATE_DELAYED_GCODE ID=chamber_temp_control_loop DURATION=60
	{% endif %}

[gcode_macro M190]																# Override M190 (Wait for Bed Temperature)
rename_existing: M99190															# As a bonus, use TEMPERATURE_WAIT so we don't have to wait for PID to level off.
gcode:

	# Parameters
	{% set S = params.S|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}

	M118 BEDFANS,M190 chamber= {chamber}
	M118 BEDFANS M190 {S}
	{% if S >= THRESHOLD %}
		BEDFANSSLOW																# >= Threshold temp: Low speed fans while heating
		M118 BEDFANS M190 S >= THRESHOLD Fans ON															
	{% else %}
		BEDFANSOFF																# < Threshold temp: Turn bed fans off
		M118 BEDFANS M190 M190 S < THRESHOLD Fans OFF
	{% endif %}                                        
	
	{action_respond_info("M190, Before M140")}
		M140 {% for p in params
	  %}{'%s%s' % (p, params[p])}{%
	  endfor %}																	# Set bed temp
	{action_respond_info("M190, After M140")}	
	
	{% if S != 0 %}
		M190 S{S} != 0 
		TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}	# Wait for bed temp within 5 degrees
		##TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S + 5|int} 					# Wait for bed temp within 5 degrees
		##SET_FAN_SPEED FAN=BedFans SPEED={heat_fast}
	{% endif %}

	# Post-heating fan speeds
	{% if S >= THRESHOLD %}								    
		BEDFANSFAST																# >= Threshold temp: Higher speed fans after heating finished
	{% endif %}


########## Aliases #########

[gcode_macro BEDFANS_HEATSLOW]
gcode:
	# Vars
	SET_FAN_SPEED FAN=BedFans SPEED=0.6

[gcode_macro BEDFANS_HEATFAST]
gcode:
	# Vars
	SET_FAN_SPEED FAN=BedFans SPEED=0.9
	
[gcode_macro BEDFANS_WARMUP]
gcode:
	# Vars
	SET_FAN_SPEED FAN=BedFans SPEED=0.1	

[gcode_macro BEDFANS_COOLSLOW]
gcode:
	# Vars
	SET_FAN_SPEED FAN=BedFans SPEED={0.25}

[gcode_macro BEDFANSOFF]
gcode:
	SET_FAN_SPEED FAN=BedFans SPEED=0

############ Command overrides ############
	

[gcode_macro TURN_OFF_HEATERS]													# Replace TURN_OFF_HEATERS
rename_existing: _TURN_OFF_HEATERS
gcode:
	BEDFANSOFF
	_TURN_OFF_HEATERS


